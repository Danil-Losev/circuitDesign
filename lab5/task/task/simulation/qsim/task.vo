// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "12/02/2024 13:52:08"

// 
// Device: Altera EP3C16F484C6 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module \task  (
	HEX0_A,
	C1,
	C0,
	HEX0_B,
	HEX0_C,
	HEX0_D,
	HEX0_E,
	HEX0_F,
	HEX0_G);
output 	HEX0_A;
input 	C1;
input 	C0;
output 	HEX0_B;
output 	HEX0_C;
output 	HEX0_D;
output 	HEX0_E;
output 	HEX0_F;
output 	HEX0_G;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \HEX0_A~output_o ;
wire \HEX0_B~output_o ;
wire \HEX0_C~output_o ;
wire \HEX0_D~output_o ;
wire \HEX0_E~output_o ;
wire \HEX0_F~output_o ;
wire \HEX0_G~output_o ;
wire \C1~input_o ;
wire \C0~input_o ;
wire \inst|A~0_combout ;
wire \inst|D~0_combout ;


cycloneiii_io_obuf \HEX0_A~output (
	.i(!\inst|A~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0_A~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0_A~output .bus_hold = "false";
defparam \HEX0_A~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \HEX0_B~output (
	.i(\C0~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0_B~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0_B~output .bus_hold = "false";
defparam \HEX0_B~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \HEX0_C~output (
	.i(\C0~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0_C~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0_C~output .bus_hold = "false";
defparam \HEX0_C~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \HEX0_D~output (
	.i(!\inst|D~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0_D~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0_D~output .bus_hold = "false";
defparam \HEX0_D~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \HEX0_E~output (
	.i(!\inst|D~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0_E~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0_E~output .bus_hold = "false";
defparam \HEX0_E~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \HEX0_F~output (
	.i(!\inst|A~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0_F~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0_F~output .bus_hold = "false";
defparam \HEX0_F~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \HEX0_G~output (
	.i(\C1~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0_G~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0_G~output .bus_hold = "false";
defparam \HEX0_G~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_ibuf \C1~input (
	.i(C1),
	.ibar(gnd),
	.o(\C1~input_o ));
// synopsys translate_off
defparam \C1~input .bus_hold = "false";
defparam \C1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_io_ibuf \C0~input (
	.i(C0),
	.ibar(gnd),
	.o(\C0~input_o ));
// synopsys translate_off
defparam \C0~input .bus_hold = "false";
defparam \C0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_lcell_comb \inst|A~0 (
// Equation(s):
// \inst|A~0_combout  = \C1~input_o  $ (\C0~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\C1~input_o ),
	.datad(\C0~input_o ),
	.cin(gnd),
	.combout(\inst|A~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|A~0 .lut_mask = 16'h0FF0;
defparam \inst|A~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiii_lcell_comb \inst|D~0 (
// Equation(s):
// \inst|D~0_combout  = (!\C0~input_o ) # (!\C1~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\C1~input_o ),
	.datad(\C0~input_o ),
	.cin(gnd),
	.combout(\inst|D~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|D~0 .lut_mask = 16'h0FFF;
defparam \inst|D~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign HEX0_A = \HEX0_A~output_o ;

assign HEX0_B = \HEX0_B~output_o ;

assign HEX0_C = \HEX0_C~output_o ;

assign HEX0_D = \HEX0_D~output_o ;

assign HEX0_E = \HEX0_E~output_o ;

assign HEX0_F = \HEX0_F~output_o ;

assign HEX0_G = \HEX0_G~output_o ;

endmodule
